{"version":3,"sources":["string_stream.js"],"names":["define","Evented","plain","StringStream","inherit","_construct","string","tabSize","this","pos","start","lastColumnPos","lastColumnValue","lineStart","eol","length","sol","peek","charAt","undefined","next","eat","match","ch","ok","test","eatWhile","eatSpace","skipToEnd","skipTo","found","indexOf","backUp","n","column","countColumn","indentation","pattern","consume","caseInsensitive","slice","index","cased","str","toLowerCase","substr","current","hideFirstChars","inner"],"mappings":";;;;;;;AAAAA,QACE,wBACA,WACA,SAASC,EAAQC,GAQjB,IAAIC,EAAeF,EAAQG,SACzBC,WAAa,SAASC,EAAQC,GAC5BC,KAAKC,IAAMD,KAAKE,MAAQ,EACxBF,KAAKF,OAASA,EACdE,KAAKD,QAAUA,GAAW,EAC1BC,KAAKG,cAAgBH,KAAKI,gBAAkB,EAC5CJ,KAAKK,UAAY,GAGnBC,IAAK,WACH,OAAON,KAAKC,KAAOD,KAAKF,OAAOS,QAGjCC,IAAK,WACH,OAAOR,KAAKC,KAAOD,KAAKK,WAG1BI,KAAM,WACJ,OAAOT,KAAKF,OAAOY,OAAOV,KAAKC,WAAQU,GAGzCC,KAAM,WACJ,GAAIZ,KAAKC,IAAMD,KAAKF,OAAOS,OACzB,OAAOP,KAAKF,OAAOY,OAAOV,KAAKC,QAGnCY,IAAK,SAASC,GACZ,IAAIC,EAAKf,KAAKF,OAAOY,OAAOV,KAAKC,KACjC,GAAoB,iBAATa,EAAmB,IAAIE,EAAKD,GAAMD,OACpCE,EAAKD,IAAOD,EAAMG,KAAOH,EAAMG,KAAKF,GAAMD,EAAMC,IACzD,GAAIC,EAAiB,QAAVhB,KAAKC,IAAYc,GAG9BG,SAAU,SAASJ,GAEjB,IADA,IAAIZ,EAAQF,KAAKC,IACVD,KAAKa,IAAIC,KAChB,OAAOd,KAAKC,IAAMC,GAGpBiB,SAAU,WAER,IADA,IAAIjB,EAAQF,KAAKC,IACV,aAAagB,KAAKjB,KAAKF,OAAOY,OAAOV,KAAKC,SAASD,KAAKC,IAC/D,OAAOD,KAAKC,IAAMC,GAGpBkB,UAAW,WACTpB,KAAKC,IAAMD,KAAKF,OAAOS,QAGzBc,OAAQ,SAASN,GACf,IAAIO,EAAQtB,KAAKF,OAAOyB,QAAQR,EAAIf,KAAKC,KACzC,GAAIqB,GAAS,EAAsB,OAAlBtB,KAAKC,IAAMqB,GAAc,GAG5CE,OAAQ,SAASC,GACfzB,KAAKC,KAAOwB,GAGdC,OAAQ,WAKN,OAJI1B,KAAKG,cAAgBH,KAAKE,QAC5BF,KAAKI,gBAAkBuB,YAAY3B,KAAKF,OAAQE,KAAKE,MAAOF,KAAKD,QAASC,KAAKG,cAAeH,KAAKI,iBACnGJ,KAAKG,cAAgBH,KAAKE,OAErBF,KAAKI,iBAAmBJ,KAAKK,UAAYsB,YAAY3B,KAAKF,OAAQE,KAAKK,UAAWL,KAAKD,SAAW,IAG3G6B,YAAa,WACX,OAAOD,YAAY3B,KAAKF,OAAQ,KAAME,KAAKD,UACxCC,KAAKK,UAAYsB,YAAY3B,KAAKF,OAAQE,KAAKK,UAAWL,KAAKD,SAAW,IAG/Ee,MAAO,SAASe,EAASC,EAASC,GAChC,GAAsB,iBAAXF,EAOJ,CACL,IAAIf,EAAQd,KAAKF,OAAOkC,MAAMhC,KAAKC,KAAKa,MAAMe,GAC9C,OAAIf,GAASA,EAAMmB,MAAQ,EAAU,MACjCnB,IAAqB,IAAZgB,IAAmB9B,KAAKC,KAAOa,EAAM,GAAGP,QAC9CO,GAVP,IAAIoB,EAAQ,SAASC,GAAM,OAAOJ,EAAkBI,EAAIC,cAAgBD,GAExE,GAAID,EADSlC,KAAKF,OAAOuC,OAAOrC,KAAKC,IAAK4B,EAAQtB,UAC7B2B,EAAML,GAEzB,OADgB,IAAZC,IAAmB9B,KAAKC,KAAO4B,EAAQtB,SACpC,GAUb+B,QAAS,WACP,OAAOtC,KAAKF,OAAOkC,MAAMhC,KAAKE,MAAOF,KAAKC,MAG5CsC,eAAgB,SAASd,EAAGe,GAC1BxC,KAAKK,WAAaoB,EAClB,IAAM,OAAOe,IACb,QAAUxC,KAAKK,WAAaoB,MAMhC,OAAO/B,EAAMC,aAAeA","file":"../string_stream.js","sourcesContent":["define([\r\n  \"skylark-langx/Evented\",\r\n  \"./plain\"\r\n],function(Evented,plain){\r\n\r\n\r\n  // STRING STREAM\r\n\r\n  // Fed to the mode parsers, provides helper functions to make\r\n  // parsers more succinct.\r\n\r\n  var StringStream = Evented.inherit({\r\n    _construct : function(string, tabSize) {\r\n      this.pos = this.start = 0;\r\n      this.string = string;\r\n      this.tabSize = tabSize || 8;\r\n      this.lastColumnPos = this.lastColumnValue = 0;\r\n      this.lineStart = 0;\r\n    },\r\n\r\n    eol: function() {\r\n      return this.pos >= this.string.length;\r\n    },\r\n    \r\n    sol: function() {\r\n      return this.pos == this.lineStart;\r\n    },\r\n    \r\n    peek: function() {\r\n      return this.string.charAt(this.pos) || undefined;\r\n    },\r\n    \r\n    next: function() {\r\n      if (this.pos < this.string.length)\r\n        return this.string.charAt(this.pos++);\r\n    },\r\n    \r\n    eat: function(match) {\r\n      var ch = this.string.charAt(this.pos);\r\n      if (typeof match == \"string\") var ok = ch == match;\r\n      else var ok = ch && (match.test ? match.test(ch) : match(ch));\r\n      if (ok) {++this.pos; return ch;}\r\n    },\r\n    \r\n    eatWhile: function(match) {\r\n      var start = this.pos;\r\n      while (this.eat(match)){}\r\n      return this.pos > start;\r\n    },\r\n    \r\n    eatSpace: function() {\r\n      var start = this.pos;\r\n      while (/[\\s\\u00a0]/.test(this.string.charAt(this.pos))) ++this.pos;\r\n      return this.pos > start;\r\n    },\r\n    \r\n    skipToEnd: function() {\r\n      this.pos = this.string.length;\r\n    },\r\n    \r\n    skipTo: function(ch) {\r\n      var found = this.string.indexOf(ch, this.pos);\r\n      if (found > -1) {this.pos = found; return true;}\r\n    },\r\n    \r\n    backUp: function(n) {\r\n      this.pos -= n;\r\n    },\r\n    \r\n    column: function() {\r\n      if (this.lastColumnPos < this.start) {\r\n        this.lastColumnValue = countColumn(this.string, this.start, this.tabSize, this.lastColumnPos, this.lastColumnValue);\r\n        this.lastColumnPos = this.start;\r\n      }\r\n      return this.lastColumnValue - (this.lineStart ? countColumn(this.string, this.lineStart, this.tabSize) : 0);\r\n    },\r\n    \r\n    indentation: function() {\r\n      return countColumn(this.string, null, this.tabSize) -\r\n        (this.lineStart ? countColumn(this.string, this.lineStart, this.tabSize) : 0);\r\n    },\r\n    \r\n    match: function(pattern, consume, caseInsensitive) {\r\n      if (typeof pattern == \"string\") {\r\n        var cased = function(str) {return caseInsensitive ? str.toLowerCase() : str;};\r\n        var substr = this.string.substr(this.pos, pattern.length);\r\n        if (cased(substr) == cased(pattern)) {\r\n          if (consume !== false) this.pos += pattern.length;\r\n          return true;\r\n        }\r\n      } else {\r\n        var match = this.string.slice(this.pos).match(pattern);\r\n        if (match && match.index > 0) return null;\r\n        if (match && consume !== false) this.pos += match[0].length;\r\n        return match;\r\n      }\r\n    },\r\n    \r\n    current: function(){\r\n      return this.string.slice(this.start, this.pos);\r\n    },\r\n    \r\n    hideFirstChars: function(n, inner) {\r\n      this.lineStart += n;\r\n      try { return inner(); }\r\n      finally { this.lineStart -= n; }\r\n    }\r\n\r\n  });\r\n\r\n\r\n  return plain.StringStream = StringStream;\r\n});\r\n"]}